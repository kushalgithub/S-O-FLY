#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApplication2.Dbml
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="S_O_FLY")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTbl_Category(Tbl_Category instance);
    partial void UpdateTbl_Category(Tbl_Category instance);
    partial void DeleteTbl_Category(Tbl_Category instance);
    partial void InsertTbl_Area(Tbl_Area instance);
    partial void UpdateTbl_Area(Tbl_Area instance);
    partial void DeleteTbl_Area(Tbl_Area instance);
    partial void InsertTbl_City(Tbl_City instance);
    partial void UpdateTbl_City(Tbl_City instance);
    partial void DeleteTbl_City(Tbl_City instance);
    partial void InsertTbl_Country(Tbl_Country instance);
    partial void UpdateTbl_Country(Tbl_Country instance);
    partial void DeleteTbl_Country(Tbl_Country instance);
    partial void InsertTbl_Payment(Tbl_Payment instance);
    partial void UpdateTbl_Payment(Tbl_Payment instance);
    partial void DeleteTbl_Payment(Tbl_Payment instance);
    partial void InsertTbl_State(Tbl_State instance);
    partial void UpdateTbl_State(Tbl_State instance);
    partial void DeleteTbl_State(Tbl_State instance);
    partial void InsertTbl_SubCategoty(Tbl_SubCategoty instance);
    partial void UpdateTbl_SubCategoty(Tbl_SubCategoty instance);
    partial void DeleteTbl_SubCategoty(Tbl_SubCategoty instance);
    partial void InsertTbl_Feedback(Tbl_Feedback instance);
    partial void UpdateTbl_Feedback(Tbl_Feedback instance);
    partial void DeleteTbl_Feedback(Tbl_Feedback instance);
    partial void InsertTbl_Login(Tbl_Login instance);
    partial void UpdateTbl_Login(Tbl_Login instance);
    partial void DeleteTbl_Login(Tbl_Login instance);
    partial void InsertTbl_UserReg(Tbl_UserReg instance);
    partial void UpdateTbl_UserReg(Tbl_UserReg instance);
    partial void DeleteTbl_UserReg(Tbl_UserReg instance);
    partial void InsertTbl_Car(Tbl_Car instance);
    partial void UpdateTbl_Car(Tbl_Car instance);
    partial void DeleteTbl_Car(Tbl_Car instance);
    partial void InsertTbl_BuyPart(Tbl_BuyPart instance);
    partial void UpdateTbl_BuyPart(Tbl_BuyPart instance);
    partial void DeleteTbl_BuyPart(Tbl_BuyPart instance);
    partial void InsertTbl_Part(Tbl_Part instance);
    partial void UpdateTbl_Part(Tbl_Part instance);
    partial void DeleteTbl_Part(Tbl_Part instance);
    partial void InsertTbl_WorkerReg(Tbl_WorkerReg instance);
    partial void UpdateTbl_WorkerReg(Tbl_WorkerReg instance);
    partial void DeleteTbl_WorkerReg(Tbl_WorkerReg instance);
    partial void InsertTbl_Service(Tbl_Service instance);
    partial void UpdateTbl_Service(Tbl_Service instance);
    partial void DeleteTbl_Service(Tbl_Service instance);
    partial void InsertTbl_Complain(Tbl_Complain instance);
    partial void UpdateTbl_Complain(Tbl_Complain instance);
    partial void DeleteTbl_Complain(Tbl_Complain instance);
    partial void InsertTbl_Branch(Tbl_Branch instance);
    partial void UpdateTbl_Branch(Tbl_Branch instance);
    partial void DeleteTbl_Branch(Tbl_Branch instance);
    partial void InsertTbl_BuyService(Tbl_BuyService instance);
    partial void UpdateTbl_BuyService(Tbl_BuyService instance);
    partial void DeleteTbl_BuyService(Tbl_BuyService instance);
    partial void InsertTbl_ServiceApp(Tbl_ServiceApp instance);
    partial void UpdateTbl_ServiceApp(Tbl_ServiceApp instance);
    partial void DeleteTbl_ServiceApp(Tbl_ServiceApp instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["S_O_FLYConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tbl_Category> Tbl_Categories
		{
			get
			{
				return this.GetTable<Tbl_Category>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Area> Tbl_Areas
		{
			get
			{
				return this.GetTable<Tbl_Area>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_City> Tbl_Cities
		{
			get
			{
				return this.GetTable<Tbl_City>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Country> Tbl_Countries
		{
			get
			{
				return this.GetTable<Tbl_Country>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Payment> Tbl_Payments
		{
			get
			{
				return this.GetTable<Tbl_Payment>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_State> Tbl_States
		{
			get
			{
				return this.GetTable<Tbl_State>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_SubCategoty> Tbl_SubCategoties
		{
			get
			{
				return this.GetTable<Tbl_SubCategoty>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Feedback> Tbl_Feedbacks
		{
			get
			{
				return this.GetTable<Tbl_Feedback>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Login> Tbl_Logins
		{
			get
			{
				return this.GetTable<Tbl_Login>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_UserReg> Tbl_UserRegs
		{
			get
			{
				return this.GetTable<Tbl_UserReg>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Car> Tbl_Cars
		{
			get
			{
				return this.GetTable<Tbl_Car>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_BuyPart> Tbl_BuyParts
		{
			get
			{
				return this.GetTable<Tbl_BuyPart>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Part> Tbl_Parts
		{
			get
			{
				return this.GetTable<Tbl_Part>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_WorkerReg> Tbl_WorkerRegs
		{
			get
			{
				return this.GetTable<Tbl_WorkerReg>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Service> Tbl_Services
		{
			get
			{
				return this.GetTable<Tbl_Service>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Complain> Tbl_Complains
		{
			get
			{
				return this.GetTable<Tbl_Complain>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Branch> Tbl_Branches
		{
			get
			{
				return this.GetTable<Tbl_Branch>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_BuyService> Tbl_BuyServices
		{
			get
			{
				return this.GetTable<Tbl_BuyService>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_ServiceApp> Tbl_ServiceApps
		{
			get
			{
				return this.GetTable<Tbl_ServiceApp>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Category")]
	public partial class Tbl_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Category_Id;
		
		private string _Category_name;
		
		private string _Discription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategory_IdChanging(int value);
    partial void OnCategory_IdChanged();
    partial void OnCategory_nameChanging(string value);
    partial void OnCategory_nameChanged();
    partial void OnDiscriptionChanging(string value);
    partial void OnDiscriptionChanged();
    #endregion
		
		public Tbl_Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Category_Id
		{
			get
			{
				return this._Category_Id;
			}
			set
			{
				if ((this._Category_Id != value))
				{
					this.OnCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._Category_Id = value;
					this.SendPropertyChanged("Category_Id");
					this.OnCategory_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_name", DbType="NVarChar(50)")]
		public string Category_name
		{
			get
			{
				return this._Category_name;
			}
			set
			{
				if ((this._Category_name != value))
				{
					this.OnCategory_nameChanging(value);
					this.SendPropertyChanging();
					this._Category_name = value;
					this.SendPropertyChanged("Category_name");
					this.OnCategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discription", DbType="NVarChar(250)")]
		public string Discription
		{
			get
			{
				return this._Discription;
			}
			set
			{
				if ((this._Discription != value))
				{
					this.OnDiscriptionChanging(value);
					this.SendPropertyChanging();
					this._Discription = value;
					this.SendPropertyChanged("Discription");
					this.OnDiscriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Area")]
	public partial class Tbl_Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Area_Id;
		
		private string _Area_Name;
		
		private System.Nullable<int> _City_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArea_IdChanging(int value);
    partial void OnArea_IdChanged();
    partial void OnArea_NameChanging(string value);
    partial void OnArea_NameChanged();
    partial void OnCity_IdChanging(System.Nullable<int> value);
    partial void OnCity_IdChanged();
    #endregion
		
		public Tbl_Area()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Area_Id
		{
			get
			{
				return this._Area_Id;
			}
			set
			{
				if ((this._Area_Id != value))
				{
					this.OnArea_IdChanging(value);
					this.SendPropertyChanging();
					this._Area_Id = value;
					this.SendPropertyChanged("Area_Id");
					this.OnArea_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area_Name", DbType="NVarChar(50)")]
		public string Area_Name
		{
			get
			{
				return this._Area_Name;
			}
			set
			{
				if ((this._Area_Name != value))
				{
					this.OnArea_NameChanging(value);
					this.SendPropertyChanging();
					this._Area_Name = value;
					this.SendPropertyChanged("Area_Name");
					this.OnArea_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Id", DbType="Int")]
		public System.Nullable<int> City_Id
		{
			get
			{
				return this._City_Id;
			}
			set
			{
				if ((this._City_Id != value))
				{
					this.OnCity_IdChanging(value);
					this.SendPropertyChanging();
					this._City_Id = value;
					this.SendPropertyChanged("City_Id");
					this.OnCity_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_City")]
	public partial class Tbl_City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _City_Id;
		
		private string _City_Name;
		
		private System.Nullable<int> _State_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCity_IdChanging(int value);
    partial void OnCity_IdChanged();
    partial void OnCity_NameChanging(string value);
    partial void OnCity_NameChanged();
    partial void OnState_IdChanging(System.Nullable<int> value);
    partial void OnState_IdChanged();
    #endregion
		
		public Tbl_City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int City_Id
		{
			get
			{
				return this._City_Id;
			}
			set
			{
				if ((this._City_Id != value))
				{
					this.OnCity_IdChanging(value);
					this.SendPropertyChanging();
					this._City_Id = value;
					this.SendPropertyChanged("City_Id");
					this.OnCity_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Name", DbType="NVarChar(50)")]
		public string City_Name
		{
			get
			{
				return this._City_Name;
			}
			set
			{
				if ((this._City_Name != value))
				{
					this.OnCity_NameChanging(value);
					this.SendPropertyChanging();
					this._City_Name = value;
					this.SendPropertyChanged("City_Name");
					this.OnCity_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Id", DbType="Int")]
		public System.Nullable<int> State_Id
		{
			get
			{
				return this._State_Id;
			}
			set
			{
				if ((this._State_Id != value))
				{
					this.OnState_IdChanging(value);
					this.SendPropertyChanging();
					this._State_Id = value;
					this.SendPropertyChanged("State_Id");
					this.OnState_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Country")]
	public partial class Tbl_Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Country_Id;
		
		private string _Country_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountry_IdChanging(int value);
    partial void OnCountry_IdChanged();
    partial void OnCountry_NameChanging(string value);
    partial void OnCountry_NameChanged();
    #endregion
		
		public Tbl_Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Country_Id
		{
			get
			{
				return this._Country_Id;
			}
			set
			{
				if ((this._Country_Id != value))
				{
					this.OnCountry_IdChanging(value);
					this.SendPropertyChanging();
					this._Country_Id = value;
					this.SendPropertyChanged("Country_Id");
					this.OnCountry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Name", DbType="NVarChar(50)")]
		public string Country_Name
		{
			get
			{
				return this._Country_Name;
			}
			set
			{
				if ((this._Country_Name != value))
				{
					this.OnCountry_NameChanging(value);
					this.SendPropertyChanging();
					this._Country_Name = value;
					this.SendPropertyChanged("Country_Name");
					this.OnCountry_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Payment")]
	public partial class Tbl_Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Payment_Id;
		
		private System.Nullable<int> _User_Id;
		
		private string _Service;
		
		private string _Charge;
		
		private string _Payment_Date;
		
		private string _Payment_Type;
		
		private string _Cheque_No;
		
		private string _Bank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_IdChanging(int value);
    partial void OnPayment_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnServiceChanging(string value);
    partial void OnServiceChanged();
    partial void OnChargeChanging(string value);
    partial void OnChargeChanged();
    partial void OnPayment_DateChanging(string value);
    partial void OnPayment_DateChanged();
    partial void OnPayment_TypeChanging(string value);
    partial void OnPayment_TypeChanged();
    partial void OnCheque_NoChanging(string value);
    partial void OnCheque_NoChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    #endregion
		
		public Tbl_Payment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Payment_Id
		{
			get
			{
				return this._Payment_Id;
			}
			set
			{
				if ((this._Payment_Id != value))
				{
					this.OnPayment_IdChanging(value);
					this.SendPropertyChanging();
					this._Payment_Id = value;
					this.SendPropertyChanged("Payment_Id");
					this.OnPayment_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service", DbType="NVarChar(50)")]
		public string Service
		{
			get
			{
				return this._Service;
			}
			set
			{
				if ((this._Service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._Service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charge", DbType="NVarChar(50)")]
		public string Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				if ((this._Charge != value))
				{
					this.OnChargeChanging(value);
					this.SendPropertyChanging();
					this._Charge = value;
					this.SendPropertyChanged("Charge");
					this.OnChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Date", DbType="NVarChar(50)")]
		public string Payment_Date
		{
			get
			{
				return this._Payment_Date;
			}
			set
			{
				if ((this._Payment_Date != value))
				{
					this.OnPayment_DateChanging(value);
					this.SendPropertyChanging();
					this._Payment_Date = value;
					this.SendPropertyChanged("Payment_Date");
					this.OnPayment_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Type", DbType="NVarChar(50)")]
		public string Payment_Type
		{
			get
			{
				return this._Payment_Type;
			}
			set
			{
				if ((this._Payment_Type != value))
				{
					this.OnPayment_TypeChanging(value);
					this.SendPropertyChanging();
					this._Payment_Type = value;
					this.SendPropertyChanged("Payment_Type");
					this.OnPayment_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cheque_No", DbType="NVarChar(50)")]
		public string Cheque_No
		{
			get
			{
				return this._Cheque_No;
			}
			set
			{
				if ((this._Cheque_No != value))
				{
					this.OnCheque_NoChanging(value);
					this.SendPropertyChanging();
					this._Cheque_No = value;
					this.SendPropertyChanged("Cheque_No");
					this.OnCheque_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(50)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_State")]
	public partial class Tbl_State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _State_Id;
		
		private string _State_Name;
		
		private System.Nullable<int> _Country_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnState_IdChanging(int value);
    partial void OnState_IdChanged();
    partial void OnState_NameChanging(string value);
    partial void OnState_NameChanged();
    partial void OnCountry_IdChanging(System.Nullable<int> value);
    partial void OnCountry_IdChanged();
    #endregion
		
		public Tbl_State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int State_Id
		{
			get
			{
				return this._State_Id;
			}
			set
			{
				if ((this._State_Id != value))
				{
					this.OnState_IdChanging(value);
					this.SendPropertyChanging();
					this._State_Id = value;
					this.SendPropertyChanged("State_Id");
					this.OnState_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Name", DbType="NVarChar(50)")]
		public string State_Name
		{
			get
			{
				return this._State_Name;
			}
			set
			{
				if ((this._State_Name != value))
				{
					this.OnState_NameChanging(value);
					this.SendPropertyChanging();
					this._State_Name = value;
					this.SendPropertyChanged("State_Name");
					this.OnState_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Id", DbType="Int")]
		public System.Nullable<int> Country_Id
		{
			get
			{
				return this._Country_Id;
			}
			set
			{
				if ((this._Country_Id != value))
				{
					this.OnCountry_IdChanging(value);
					this.SendPropertyChanging();
					this._Country_Id = value;
					this.SendPropertyChanged("Country_Id");
					this.OnCountry_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_SubCategoty")]
	public partial class Tbl_SubCategoty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubCategory_Id;
		
		private string _SubCateName;
		
		private string _SubCateDiscription;
		
		private System.Nullable<int> _Category_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubCategory_IdChanging(int value);
    partial void OnSubCategory_IdChanged();
    partial void OnSubCateNameChanging(string value);
    partial void OnSubCateNameChanged();
    partial void OnSubCateDiscriptionChanging(string value);
    partial void OnSubCateDiscriptionChanged();
    partial void OnCategory_IdChanging(System.Nullable<int> value);
    partial void OnCategory_IdChanged();
    #endregion
		
		public Tbl_SubCategoty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubCategory_Id
		{
			get
			{
				return this._SubCategory_Id;
			}
			set
			{
				if ((this._SubCategory_Id != value))
				{
					this.OnSubCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._SubCategory_Id = value;
					this.SendPropertyChanged("SubCategory_Id");
					this.OnSubCategory_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCateName", DbType="NVarChar(50)")]
		public string SubCateName
		{
			get
			{
				return this._SubCateName;
			}
			set
			{
				if ((this._SubCateName != value))
				{
					this.OnSubCateNameChanging(value);
					this.SendPropertyChanging();
					this._SubCateName = value;
					this.SendPropertyChanged("SubCateName");
					this.OnSubCateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCateDiscription", DbType="NVarChar(250)")]
		public string SubCateDiscription
		{
			get
			{
				return this._SubCateDiscription;
			}
			set
			{
				if ((this._SubCateDiscription != value))
				{
					this.OnSubCateDiscriptionChanging(value);
					this.SendPropertyChanging();
					this._SubCateDiscription = value;
					this.SendPropertyChanged("SubCateDiscription");
					this.OnSubCateDiscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Id", DbType="Int")]
		public System.Nullable<int> Category_Id
		{
			get
			{
				return this._Category_Id;
			}
			set
			{
				if ((this._Category_Id != value))
				{
					this.OnCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._Category_Id = value;
					this.SendPropertyChanged("Category_Id");
					this.OnCategory_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Feedback")]
	public partial class Tbl_Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Feedback_Id;
		
		private System.Nullable<int> _User_Id;
		
		private string _Feedback;
		
		private System.Nullable<int> _Rating;
		
		private EntityRef<Tbl_UserReg> _Tbl_UserReg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedback_IdChanging(int value);
    partial void OnFeedback_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnFeedbackChanging(string value);
    partial void OnFeedbackChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    #endregion
		
		public Tbl_Feedback()
		{
			this._Tbl_UserReg = default(EntityRef<Tbl_UserReg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Feedback_Id
		{
			get
			{
				return this._Feedback_Id;
			}
			set
			{
				if ((this._Feedback_Id != value))
				{
					this.OnFeedback_IdChanging(value);
					this.SendPropertyChanging();
					this._Feedback_Id = value;
					this.SendPropertyChanged("Feedback_Id");
					this.OnFeedback_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._Tbl_UserReg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(250)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserReg_Tbl_Feedback", Storage="_Tbl_UserReg", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public Tbl_UserReg Tbl_UserReg
		{
			get
			{
				return this._Tbl_UserReg.Entity;
			}
			set
			{
				Tbl_UserReg previousValue = this._Tbl_UserReg.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserReg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserReg.Entity = null;
						previousValue.Tbl_Feedbacks.Remove(this);
					}
					this._Tbl_UserReg.Entity = value;
					if ((value != null))
					{
						value.Tbl_Feedbacks.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserReg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Login")]
	public partial class Tbl_Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Login_Id;
		
		private string _UserName;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogin_IdChanging(int value);
    partial void OnLogin_IdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Tbl_Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_UserReg")]
	public partial class Tbl_UserReg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Password;
		
		private string _ConfirmPassword;
		
		private string _Address;
		
		private System.Nullable<int> _Country_Id;
		
		private System.Nullable<int> _State_Id;
		
		private System.Nullable<int> _City_Id;
		
		private string _Email;
		
		private System.Nullable<int> _ContactNumber;
		
		private System.Nullable<int> _Login_Id;
		
		private EntitySet<Tbl_Feedback> _Tbl_Feedbacks;
		
		private EntitySet<Tbl_Complain> _Tbl_Complains;
		
		private EntitySet<Tbl_ServiceApp> _Tbl_ServiceApps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnConfirmPasswordChanging(string value);
    partial void OnConfirmPasswordChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCountry_IdChanging(System.Nullable<int> value);
    partial void OnCountry_IdChanged();
    partial void OnState_IdChanging(System.Nullable<int> value);
    partial void OnState_IdChanged();
    partial void OnCity_IdChanging(System.Nullable<int> value);
    partial void OnCity_IdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNumberChanging(System.Nullable<int> value);
    partial void OnContactNumberChanged();
    partial void OnLogin_IdChanging(System.Nullable<int> value);
    partial void OnLogin_IdChanged();
    #endregion
		
		public Tbl_UserReg()
		{
			this._Tbl_Feedbacks = new EntitySet<Tbl_Feedback>(new Action<Tbl_Feedback>(this.attach_Tbl_Feedbacks), new Action<Tbl_Feedback>(this.detach_Tbl_Feedbacks));
			this._Tbl_Complains = new EntitySet<Tbl_Complain>(new Action<Tbl_Complain>(this.attach_Tbl_Complains), new Action<Tbl_Complain>(this.detach_Tbl_Complains));
			this._Tbl_ServiceApps = new EntitySet<Tbl_ServiceApp>(new Action<Tbl_ServiceApp>(this.attach_Tbl_ServiceApps), new Action<Tbl_ServiceApp>(this.detach_Tbl_ServiceApps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmPassword", DbType="NVarChar(50)")]
		public string ConfirmPassword
		{
			get
			{
				return this._ConfirmPassword;
			}
			set
			{
				if ((this._ConfirmPassword != value))
				{
					this.OnConfirmPasswordChanging(value);
					this.SendPropertyChanging();
					this._ConfirmPassword = value;
					this.SendPropertyChanged("ConfirmPassword");
					this.OnConfirmPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Id", DbType="Int")]
		public System.Nullable<int> Country_Id
		{
			get
			{
				return this._Country_Id;
			}
			set
			{
				if ((this._Country_Id != value))
				{
					this.OnCountry_IdChanging(value);
					this.SendPropertyChanging();
					this._Country_Id = value;
					this.SendPropertyChanged("Country_Id");
					this.OnCountry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Id", DbType="Int")]
		public System.Nullable<int> State_Id
		{
			get
			{
				return this._State_Id;
			}
			set
			{
				if ((this._State_Id != value))
				{
					this.OnState_IdChanging(value);
					this.SendPropertyChanging();
					this._State_Id = value;
					this.SendPropertyChanged("State_Id");
					this.OnState_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Id", DbType="Int")]
		public System.Nullable<int> City_Id
		{
			get
			{
				return this._City_Id;
			}
			set
			{
				if ((this._City_Id != value))
				{
					this.OnCity_IdChanging(value);
					this.SendPropertyChanging();
					this._City_Id = value;
					this.SendPropertyChanged("City_Id");
					this.OnCity_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="Int")]
		public System.Nullable<int> ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", DbType="Int")]
		public System.Nullable<int> Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserReg_Tbl_Feedback", Storage="_Tbl_Feedbacks", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<Tbl_Feedback> Tbl_Feedbacks
		{
			get
			{
				return this._Tbl_Feedbacks;
			}
			set
			{
				this._Tbl_Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserReg_Tbl_Complain", Storage="_Tbl_Complains", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<Tbl_Complain> Tbl_Complains
		{
			get
			{
				return this._Tbl_Complains;
			}
			set
			{
				this._Tbl_Complains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserReg_Tbl_ServiceApp", Storage="_Tbl_ServiceApps", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<Tbl_ServiceApp> Tbl_ServiceApps
		{
			get
			{
				return this._Tbl_ServiceApps;
			}
			set
			{
				this._Tbl_ServiceApps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Feedbacks(Tbl_Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserReg = this;
		}
		
		private void detach_Tbl_Feedbacks(Tbl_Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserReg = null;
		}
		
		private void attach_Tbl_Complains(Tbl_Complain entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserReg = this;
		}
		
		private void detach_Tbl_Complains(Tbl_Complain entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserReg = null;
		}
		
		private void attach_Tbl_ServiceApps(Tbl_ServiceApp entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserReg = this;
		}
		
		private void detach_Tbl_ServiceApps(Tbl_ServiceApp entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserReg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Car")]
	public partial class Tbl_Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Car_Id;
		
		private string _Car_Model;
		
		private string _Car_No;
		
		private System.Nullable<int> _User_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCar_IdChanging(int value);
    partial void OnCar_IdChanged();
    partial void OnCar_ModelChanging(string value);
    partial void OnCar_ModelChanged();
    partial void OnCar_NoChanging(string value);
    partial void OnCar_NoChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    #endregion
		
		public Tbl_Car()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Car_Id
		{
			get
			{
				return this._Car_Id;
			}
			set
			{
				if ((this._Car_Id != value))
				{
					this.OnCar_IdChanging(value);
					this.SendPropertyChanging();
					this._Car_Id = value;
					this.SendPropertyChanged("Car_Id");
					this.OnCar_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car_Model", DbType="NVarChar(100)")]
		public string Car_Model
		{
			get
			{
				return this._Car_Model;
			}
			set
			{
				if ((this._Car_Model != value))
				{
					this.OnCar_ModelChanging(value);
					this.SendPropertyChanging();
					this._Car_Model = value;
					this.SendPropertyChanged("Car_Model");
					this.OnCar_ModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car_No", DbType="NVarChar(50)")]
		public string Car_No
		{
			get
			{
				return this._Car_No;
			}
			set
			{
				if ((this._Car_No != value))
				{
					this.OnCar_NoChanging(value);
					this.SendPropertyChanging();
					this._Car_No = value;
					this.SendPropertyChanged("Car_No");
					this.OnCar_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_BuyPart")]
	public partial class Tbl_BuyPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Buy_Id;
		
		private System.Nullable<int> _Part_Id;
		
		private System.Nullable<int> _Category_Id;
		
		private System.Nullable<int> _SubCategory_Id;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _User_Id;
		
		private string _PartPrice;
		
		private EntityRef<Tbl_Part> _Tbl_Part;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuy_IdChanging(int value);
    partial void OnBuy_IdChanged();
    partial void OnPart_IdChanging(System.Nullable<int> value);
    partial void OnPart_IdChanged();
    partial void OnCategory_IdChanging(System.Nullable<int> value);
    partial void OnCategory_IdChanged();
    partial void OnSubCategory_IdChanging(System.Nullable<int> value);
    partial void OnSubCategory_IdChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnPartPriceChanging(string value);
    partial void OnPartPriceChanged();
    #endregion
		
		public Tbl_BuyPart()
		{
			this._Tbl_Part = default(EntityRef<Tbl_Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buy_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Buy_Id
		{
			get
			{
				return this._Buy_Id;
			}
			set
			{
				if ((this._Buy_Id != value))
				{
					this.OnBuy_IdChanging(value);
					this.SendPropertyChanging();
					this._Buy_Id = value;
					this.SendPropertyChanged("Buy_Id");
					this.OnBuy_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Part_Id", DbType="Int")]
		public System.Nullable<int> Part_Id
		{
			get
			{
				return this._Part_Id;
			}
			set
			{
				if ((this._Part_Id != value))
				{
					if (this._Tbl_Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPart_IdChanging(value);
					this.SendPropertyChanging();
					this._Part_Id = value;
					this.SendPropertyChanged("Part_Id");
					this.OnPart_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Id", DbType="Int")]
		public System.Nullable<int> Category_Id
		{
			get
			{
				return this._Category_Id;
			}
			set
			{
				if ((this._Category_Id != value))
				{
					this.OnCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._Category_Id = value;
					this.SendPropertyChanged("Category_Id");
					this.OnCategory_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory_Id", DbType="Int")]
		public System.Nullable<int> SubCategory_Id
		{
			get
			{
				return this._SubCategory_Id;
			}
			set
			{
				if ((this._SubCategory_Id != value))
				{
					this.OnSubCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._SubCategory_Id = value;
					this.SendPropertyChanged("SubCategory_Id");
					this.OnSubCategory_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartPrice", DbType="NVarChar(50)")]
		public string PartPrice
		{
			get
			{
				return this._PartPrice;
			}
			set
			{
				if ((this._PartPrice != value))
				{
					this.OnPartPriceChanging(value);
					this.SendPropertyChanging();
					this._PartPrice = value;
					this.SendPropertyChanged("PartPrice");
					this.OnPartPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Part_Tbl_BuyPart", Storage="_Tbl_Part", ThisKey="Part_Id", OtherKey="Part_Id", IsForeignKey=true)]
		public Tbl_Part Tbl_Part
		{
			get
			{
				return this._Tbl_Part.Entity;
			}
			set
			{
				Tbl_Part previousValue = this._Tbl_Part.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Part.Entity = null;
						previousValue.Tbl_BuyParts.Remove(this);
					}
					this._Tbl_Part.Entity = value;
					if ((value != null))
					{
						value.Tbl_BuyParts.Add(this);
						this._Part_Id = value.Part_Id;
					}
					else
					{
						this._Part_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Parts")]
	public partial class Tbl_Part : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Part_Id;
		
		private string _PartName;
		
		private System.Nullable<int> _Category_Id;
		
		private System.Nullable<int> _SubCategory_Id;
		
		private string _Part_No;
		
		private string _PartUsage;
		
		private string _PartPrice;
		
		private string _PartImage;
		
		private EntitySet<Tbl_BuyPart> _Tbl_BuyParts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPart_IdChanging(int value);
    partial void OnPart_IdChanged();
    partial void OnPartNameChanging(string value);
    partial void OnPartNameChanged();
    partial void OnCategory_IdChanging(System.Nullable<int> value);
    partial void OnCategory_IdChanged();
    partial void OnSubCategory_IdChanging(System.Nullable<int> value);
    partial void OnSubCategory_IdChanged();
    partial void OnPart_NoChanging(string value);
    partial void OnPart_NoChanged();
    partial void OnPartUsageChanging(string value);
    partial void OnPartUsageChanged();
    partial void OnPartPriceChanging(string value);
    partial void OnPartPriceChanged();
    partial void OnPartImageChanging(string value);
    partial void OnPartImageChanged();
    #endregion
		
		public Tbl_Part()
		{
			this._Tbl_BuyParts = new EntitySet<Tbl_BuyPart>(new Action<Tbl_BuyPart>(this.attach_Tbl_BuyParts), new Action<Tbl_BuyPart>(this.detach_Tbl_BuyParts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Part_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Part_Id
		{
			get
			{
				return this._Part_Id;
			}
			set
			{
				if ((this._Part_Id != value))
				{
					this.OnPart_IdChanging(value);
					this.SendPropertyChanging();
					this._Part_Id = value;
					this.SendPropertyChanged("Part_Id");
					this.OnPart_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartName", DbType="NVarChar(50)")]
		public string PartName
		{
			get
			{
				return this._PartName;
			}
			set
			{
				if ((this._PartName != value))
				{
					this.OnPartNameChanging(value);
					this.SendPropertyChanging();
					this._PartName = value;
					this.SendPropertyChanged("PartName");
					this.OnPartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Id", DbType="Int")]
		public System.Nullable<int> Category_Id
		{
			get
			{
				return this._Category_Id;
			}
			set
			{
				if ((this._Category_Id != value))
				{
					this.OnCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._Category_Id = value;
					this.SendPropertyChanged("Category_Id");
					this.OnCategory_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory_Id", DbType="Int")]
		public System.Nullable<int> SubCategory_Id
		{
			get
			{
				return this._SubCategory_Id;
			}
			set
			{
				if ((this._SubCategory_Id != value))
				{
					this.OnSubCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._SubCategory_Id = value;
					this.SendPropertyChanged("SubCategory_Id");
					this.OnSubCategory_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Part_No", DbType="NVarChar(50)")]
		public string Part_No
		{
			get
			{
				return this._Part_No;
			}
			set
			{
				if ((this._Part_No != value))
				{
					this.OnPart_NoChanging(value);
					this.SendPropertyChanging();
					this._Part_No = value;
					this.SendPropertyChanged("Part_No");
					this.OnPart_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartUsage", DbType="NVarChar(50)")]
		public string PartUsage
		{
			get
			{
				return this._PartUsage;
			}
			set
			{
				if ((this._PartUsage != value))
				{
					this.OnPartUsageChanging(value);
					this.SendPropertyChanging();
					this._PartUsage = value;
					this.SendPropertyChanged("PartUsage");
					this.OnPartUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartPrice", DbType="NVarChar(50)")]
		public string PartPrice
		{
			get
			{
				return this._PartPrice;
			}
			set
			{
				if ((this._PartPrice != value))
				{
					this.OnPartPriceChanging(value);
					this.SendPropertyChanging();
					this._PartPrice = value;
					this.SendPropertyChanged("PartPrice");
					this.OnPartPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartImage", DbType="NVarChar(500)")]
		public string PartImage
		{
			get
			{
				return this._PartImage;
			}
			set
			{
				if ((this._PartImage != value))
				{
					this.OnPartImageChanging(value);
					this.SendPropertyChanging();
					this._PartImage = value;
					this.SendPropertyChanged("PartImage");
					this.OnPartImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Part_Tbl_BuyPart", Storage="_Tbl_BuyParts", ThisKey="Part_Id", OtherKey="Part_Id")]
		public EntitySet<Tbl_BuyPart> Tbl_BuyParts
		{
			get
			{
				return this._Tbl_BuyParts;
			}
			set
			{
				this._Tbl_BuyParts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_BuyParts(Tbl_BuyPart entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Part = this;
		}
		
		private void detach_Tbl_BuyParts(Tbl_BuyPart entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Part = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_WorkerReg")]
	public partial class Tbl_WorkerReg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Worker_Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Address;
		
		private System.Nullable<int> _Country_Id;
		
		private System.Nullable<int> _State_Id;
		
		private System.Nullable<int> _City_Id;
		
		private string _Experience;
		
		private System.Nullable<int> _Contact_No;
		
		private System.Nullable<int> _Branch_Id;
		
		private System.Nullable<int> _Login_Id;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorker_IdChanging(int value);
    partial void OnWorker_IdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCountry_IdChanging(System.Nullable<int> value);
    partial void OnCountry_IdChanged();
    partial void OnState_IdChanging(System.Nullable<int> value);
    partial void OnState_IdChanged();
    partial void OnCity_IdChanging(System.Nullable<int> value);
    partial void OnCity_IdChanged();
    partial void OnExperienceChanging(string value);
    partial void OnExperienceChanged();
    partial void OnContact_NoChanging(System.Nullable<int> value);
    partial void OnContact_NoChanged();
    partial void OnBranch_IdChanging(System.Nullable<int> value);
    partial void OnBranch_IdChanged();
    partial void OnLogin_IdChanging(System.Nullable<int> value);
    partial void OnLogin_IdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Tbl_WorkerReg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worker_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Worker_Id
		{
			get
			{
				return this._Worker_Id;
			}
			set
			{
				if ((this._Worker_Id != value))
				{
					this.OnWorker_IdChanging(value);
					this.SendPropertyChanging();
					this._Worker_Id = value;
					this.SendPropertyChanged("Worker_Id");
					this.OnWorker_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Id", DbType="Int")]
		public System.Nullable<int> Country_Id
		{
			get
			{
				return this._Country_Id;
			}
			set
			{
				if ((this._Country_Id != value))
				{
					this.OnCountry_IdChanging(value);
					this.SendPropertyChanging();
					this._Country_Id = value;
					this.SendPropertyChanged("Country_Id");
					this.OnCountry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Id", DbType="Int")]
		public System.Nullable<int> State_Id
		{
			get
			{
				return this._State_Id;
			}
			set
			{
				if ((this._State_Id != value))
				{
					this.OnState_IdChanging(value);
					this.SendPropertyChanging();
					this._State_Id = value;
					this.SendPropertyChanged("State_Id");
					this.OnState_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Id", DbType="Int")]
		public System.Nullable<int> City_Id
		{
			get
			{
				return this._City_Id;
			}
			set
			{
				if ((this._City_Id != value))
				{
					this.OnCity_IdChanging(value);
					this.SendPropertyChanging();
					this._City_Id = value;
					this.SendPropertyChanged("City_Id");
					this.OnCity_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Experience", DbType="NVarChar(100)")]
		public string Experience
		{
			get
			{
				return this._Experience;
			}
			set
			{
				if ((this._Experience != value))
				{
					this.OnExperienceChanging(value);
					this.SendPropertyChanging();
					this._Experience = value;
					this.SendPropertyChanged("Experience");
					this.OnExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_No", DbType="Int")]
		public System.Nullable<int> Contact_No
		{
			get
			{
				return this._Contact_No;
			}
			set
			{
				if ((this._Contact_No != value))
				{
					this.OnContact_NoChanging(value);
					this.SendPropertyChanging();
					this._Contact_No = value;
					this.SendPropertyChanged("Contact_No");
					this.OnContact_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_Id", DbType="Int")]
		public System.Nullable<int> Branch_Id
		{
			get
			{
				return this._Branch_Id;
			}
			set
			{
				if ((this._Branch_Id != value))
				{
					this.OnBranch_IdChanging(value);
					this.SendPropertyChanging();
					this._Branch_Id = value;
					this.SendPropertyChanged("Branch_Id");
					this.OnBranch_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", DbType="Int")]
		public System.Nullable<int> Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Service")]
	public partial class Tbl_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Service_Id;
		
		private string _ServiceName;
		
		private string _ServiceDiscription;
		
		private System.Nullable<int> _ServiceCharge;
		
		private string _ServiceImage;
		
		private EntitySet<Tbl_BuyService> _Tbl_BuyServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnService_IdChanging(int value);
    partial void OnService_IdChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnServiceDiscriptionChanging(string value);
    partial void OnServiceDiscriptionChanged();
    partial void OnServiceChargeChanging(System.Nullable<int> value);
    partial void OnServiceChargeChanged();
    partial void OnServiceImageChanging(string value);
    partial void OnServiceImageChanged();
    #endregion
		
		public Tbl_Service()
		{
			this._Tbl_BuyServices = new EntitySet<Tbl_BuyService>(new Action<Tbl_BuyService>(this.attach_Tbl_BuyServices), new Action<Tbl_BuyService>(this.detach_Tbl_BuyServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Service_Id
		{
			get
			{
				return this._Service_Id;
			}
			set
			{
				if ((this._Service_Id != value))
				{
					this.OnService_IdChanging(value);
					this.SendPropertyChanging();
					this._Service_Id = value;
					this.SendPropertyChanged("Service_Id");
					this.OnService_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(50)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDiscription", DbType="NVarChar(500)")]
		public string ServiceDiscription
		{
			get
			{
				return this._ServiceDiscription;
			}
			set
			{
				if ((this._ServiceDiscription != value))
				{
					this.OnServiceDiscriptionChanging(value);
					this.SendPropertyChanging();
					this._ServiceDiscription = value;
					this.SendPropertyChanged("ServiceDiscription");
					this.OnServiceDiscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCharge", DbType="Int")]
		public System.Nullable<int> ServiceCharge
		{
			get
			{
				return this._ServiceCharge;
			}
			set
			{
				if ((this._ServiceCharge != value))
				{
					this.OnServiceChargeChanging(value);
					this.SendPropertyChanging();
					this._ServiceCharge = value;
					this.SendPropertyChanged("ServiceCharge");
					this.OnServiceChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceImage", DbType="NVarChar(500)")]
		public string ServiceImage
		{
			get
			{
				return this._ServiceImage;
			}
			set
			{
				if ((this._ServiceImage != value))
				{
					this.OnServiceImageChanging(value);
					this.SendPropertyChanging();
					this._ServiceImage = value;
					this.SendPropertyChanged("ServiceImage");
					this.OnServiceImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Service_Tbl_BuyService", Storage="_Tbl_BuyServices", ThisKey="Service_Id", OtherKey="Service_Id")]
		public EntitySet<Tbl_BuyService> Tbl_BuyServices
		{
			get
			{
				return this._Tbl_BuyServices;
			}
			set
			{
				this._Tbl_BuyServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_BuyServices(Tbl_BuyService entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Service = this;
		}
		
		private void detach_Tbl_BuyServices(Tbl_BuyService entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Complain")]
	public partial class Tbl_Complain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Complain_Id;
		
		private System.Nullable<int> _User_Id;
		
		private string _Complain;
		
		private string _Reply;
		
		private EntityRef<Tbl_UserReg> _Tbl_UserReg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComplain_IdChanging(int value);
    partial void OnComplain_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnComplainChanging(string value);
    partial void OnComplainChanged();
    partial void OnReplyChanging(string value);
    partial void OnReplyChanged();
    #endregion
		
		public Tbl_Complain()
		{
			this._Tbl_UserReg = default(EntityRef<Tbl_UserReg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complain_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Complain_Id
		{
			get
			{
				return this._Complain_Id;
			}
			set
			{
				if ((this._Complain_Id != value))
				{
					this.OnComplain_IdChanging(value);
					this.SendPropertyChanging();
					this._Complain_Id = value;
					this.SendPropertyChanged("Complain_Id");
					this.OnComplain_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._Tbl_UserReg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complain", DbType="NVarChar(250)")]
		public string Complain
		{
			get
			{
				return this._Complain;
			}
			set
			{
				if ((this._Complain != value))
				{
					this.OnComplainChanging(value);
					this.SendPropertyChanging();
					this._Complain = value;
					this.SendPropertyChanged("Complain");
					this.OnComplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reply", DbType="NVarChar(500)")]
		public string Reply
		{
			get
			{
				return this._Reply;
			}
			set
			{
				if ((this._Reply != value))
				{
					this.OnReplyChanging(value);
					this.SendPropertyChanging();
					this._Reply = value;
					this.SendPropertyChanged("Reply");
					this.OnReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserReg_Tbl_Complain", Storage="_Tbl_UserReg", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public Tbl_UserReg Tbl_UserReg
		{
			get
			{
				return this._Tbl_UserReg.Entity;
			}
			set
			{
				Tbl_UserReg previousValue = this._Tbl_UserReg.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserReg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserReg.Entity = null;
						previousValue.Tbl_Complains.Remove(this);
					}
					this._Tbl_UserReg.Entity = value;
					if ((value != null))
					{
						value.Tbl_Complains.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserReg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Branch")]
	public partial class Tbl_Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Branch_Id;
		
		private string _Address;
		
		private string _Area_Id;
		
		private string _City_Id;
		
		private string _State_Id;
		
		private string _Country_Id;
		
		private System.Nullable<int> _Contact_No;
		
		private string _Longitude;
		
		private string _Latitude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranch_IdChanging(int value);
    partial void OnBranch_IdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnArea_IdChanging(string value);
    partial void OnArea_IdChanged();
    partial void OnCity_IdChanging(string value);
    partial void OnCity_IdChanged();
    partial void OnState_IdChanging(string value);
    partial void OnState_IdChanged();
    partial void OnCountry_IdChanging(string value);
    partial void OnCountry_IdChanged();
    partial void OnContact_NoChanging(System.Nullable<int> value);
    partial void OnContact_NoChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    #endregion
		
		public Tbl_Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Branch_Id
		{
			get
			{
				return this._Branch_Id;
			}
			set
			{
				if ((this._Branch_Id != value))
				{
					this.OnBranch_IdChanging(value);
					this.SendPropertyChanging();
					this._Branch_Id = value;
					this.SendPropertyChanged("Branch_Id");
					this.OnBranch_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area_Id", DbType="NVarChar(50)")]
		public string Area_Id
		{
			get
			{
				return this._Area_Id;
			}
			set
			{
				if ((this._Area_Id != value))
				{
					this.OnArea_IdChanging(value);
					this.SendPropertyChanging();
					this._Area_Id = value;
					this.SendPropertyChanged("Area_Id");
					this.OnArea_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Id", DbType="NVarChar(50)")]
		public string City_Id
		{
			get
			{
				return this._City_Id;
			}
			set
			{
				if ((this._City_Id != value))
				{
					this.OnCity_IdChanging(value);
					this.SendPropertyChanging();
					this._City_Id = value;
					this.SendPropertyChanged("City_Id");
					this.OnCity_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Id", DbType="NVarChar(50)")]
		public string State_Id
		{
			get
			{
				return this._State_Id;
			}
			set
			{
				if ((this._State_Id != value))
				{
					this.OnState_IdChanging(value);
					this.SendPropertyChanging();
					this._State_Id = value;
					this.SendPropertyChanged("State_Id");
					this.OnState_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_Id", DbType="NVarChar(50)")]
		public string Country_Id
		{
			get
			{
				return this._Country_Id;
			}
			set
			{
				if ((this._Country_Id != value))
				{
					this.OnCountry_IdChanging(value);
					this.SendPropertyChanging();
					this._Country_Id = value;
					this.SendPropertyChanged("Country_Id");
					this.OnCountry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_No", DbType="Int")]
		public System.Nullable<int> Contact_No
		{
			get
			{
				return this._Contact_No;
			}
			set
			{
				if ((this._Contact_No != value))
				{
					this.OnContact_NoChanging(value);
					this.SendPropertyChanging();
					this._Contact_No = value;
					this.SendPropertyChanged("Contact_No");
					this.OnContact_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NChar(10)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NChar(10)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_BuyService")]
	public partial class Tbl_BuyService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuyService_Id;
		
		private System.Nullable<int> _Service_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _ServiceCharge;
		
		private string _Status;
		
		private EntityRef<Tbl_Service> _Tbl_Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuyService_IdChanging(int value);
    partial void OnBuyService_IdChanged();
    partial void OnService_IdChanging(System.Nullable<int> value);
    partial void OnService_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnServiceChargeChanging(System.Nullable<int> value);
    partial void OnServiceChargeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Tbl_BuyService()
		{
			this._Tbl_Service = default(EntityRef<Tbl_Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyService_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuyService_Id
		{
			get
			{
				return this._BuyService_Id;
			}
			set
			{
				if ((this._BuyService_Id != value))
				{
					this.OnBuyService_IdChanging(value);
					this.SendPropertyChanging();
					this._BuyService_Id = value;
					this.SendPropertyChanged("BuyService_Id");
					this.OnBuyService_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Id", DbType="Int")]
		public System.Nullable<int> Service_Id
		{
			get
			{
				return this._Service_Id;
			}
			set
			{
				if ((this._Service_Id != value))
				{
					if (this._Tbl_Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnService_IdChanging(value);
					this.SendPropertyChanging();
					this._Service_Id = value;
					this.SendPropertyChanged("Service_Id");
					this.OnService_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCharge", DbType="Int")]
		public System.Nullable<int> ServiceCharge
		{
			get
			{
				return this._ServiceCharge;
			}
			set
			{
				if ((this._ServiceCharge != value))
				{
					this.OnServiceChargeChanging(value);
					this.SendPropertyChanging();
					this._ServiceCharge = value;
					this.SendPropertyChanged("ServiceCharge");
					this.OnServiceChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Service_Tbl_BuyService", Storage="_Tbl_Service", ThisKey="Service_Id", OtherKey="Service_Id", IsForeignKey=true)]
		public Tbl_Service Tbl_Service
		{
			get
			{
				return this._Tbl_Service.Entity;
			}
			set
			{
				Tbl_Service previousValue = this._Tbl_Service.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Service.Entity = null;
						previousValue.Tbl_BuyServices.Remove(this);
					}
					this._Tbl_Service.Entity = value;
					if ((value != null))
					{
						value.Tbl_BuyServices.Add(this);
						this._Service_Id = value.Service_Id;
					}
					else
					{
						this._Service_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_ServiceApp")]
	public partial class Tbl_ServiceApp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private int _Service_Id;
		
		private string _Appointment_Date;
		
		private string _Service;
		
		private string _Problem;
		
		private string _CarModel;
		
		private System.Nullable<int> _Branch_Id;
		
		private EntityRef<Tbl_UserReg> _Tbl_UserReg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnService_IdChanging(int value);
    partial void OnService_IdChanged();
    partial void OnAppointment_DateChanging(string value);
    partial void OnAppointment_DateChanged();
    partial void OnServiceChanging(string value);
    partial void OnServiceChanged();
    partial void OnProblemChanging(string value);
    partial void OnProblemChanged();
    partial void OnCarModelChanging(string value);
    partial void OnCarModelChanged();
    partial void OnBranch_IdChanging(System.Nullable<int> value);
    partial void OnBranch_IdChanged();
    #endregion
		
		public Tbl_ServiceApp()
		{
			this._Tbl_UserReg = default(EntityRef<Tbl_UserReg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._Tbl_UserReg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Service_Id
		{
			get
			{
				return this._Service_Id;
			}
			set
			{
				if ((this._Service_Id != value))
				{
					this.OnService_IdChanging(value);
					this.SendPropertyChanging();
					this._Service_Id = value;
					this.SendPropertyChanged("Service_Id");
					this.OnService_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appointment_Date", DbType="NVarChar(50)")]
		public string Appointment_Date
		{
			get
			{
				return this._Appointment_Date;
			}
			set
			{
				if ((this._Appointment_Date != value))
				{
					this.OnAppointment_DateChanging(value);
					this.SendPropertyChanging();
					this._Appointment_Date = value;
					this.SendPropertyChanged("Appointment_Date");
					this.OnAppointment_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service", DbType="NVarChar(100)")]
		public string Service
		{
			get
			{
				return this._Service;
			}
			set
			{
				if ((this._Service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._Service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Problem", DbType="NVarChar(250)")]
		public string Problem
		{
			get
			{
				return this._Problem;
			}
			set
			{
				if ((this._Problem != value))
				{
					this.OnProblemChanging(value);
					this.SendPropertyChanging();
					this._Problem = value;
					this.SendPropertyChanged("Problem");
					this.OnProblemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarModel", DbType="NVarChar(150)")]
		public string CarModel
		{
			get
			{
				return this._CarModel;
			}
			set
			{
				if ((this._CarModel != value))
				{
					this.OnCarModelChanging(value);
					this.SendPropertyChanging();
					this._CarModel = value;
					this.SendPropertyChanged("CarModel");
					this.OnCarModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_Id", DbType="Int")]
		public System.Nullable<int> Branch_Id
		{
			get
			{
				return this._Branch_Id;
			}
			set
			{
				if ((this._Branch_Id != value))
				{
					this.OnBranch_IdChanging(value);
					this.SendPropertyChanging();
					this._Branch_Id = value;
					this.SendPropertyChanged("Branch_Id");
					this.OnBranch_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserReg_Tbl_ServiceApp", Storage="_Tbl_UserReg", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public Tbl_UserReg Tbl_UserReg
		{
			get
			{
				return this._Tbl_UserReg.Entity;
			}
			set
			{
				Tbl_UserReg previousValue = this._Tbl_UserReg.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserReg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserReg.Entity = null;
						previousValue.Tbl_ServiceApps.Remove(this);
					}
					this._Tbl_UserReg.Entity = value;
					if ((value != null))
					{
						value.Tbl_ServiceApps.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(int);
					}
					this.SendPropertyChanged("Tbl_UserReg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.New")]
	public partial class New
	{
		
		private string _message;
		
		public New()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(50)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this._message = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
